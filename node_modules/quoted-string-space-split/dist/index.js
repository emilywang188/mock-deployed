var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  default: () => src_default,
  splitSpacesExcludeQuotes: () => splitSpacesExcludeQuotes,
  splitSpacesExcludeQuotesDetailed: () => splitSpacesExcludeQuotesDetailed
});
module.exports = __toCommonJS(src_exports);

// src/quoted-string-space-split.ts
function splitSpacesExcludeQuotesDetailed(string) {
  const groupsRegex = /[^\s"']+|(?:"|'){2,}|"(?!")([^"]*)"|'(?!')([^']*)'|"|'/g;
  const matches = [];
  let match;
  while (match = groupsRegex.exec(string)) {
    if (match[2]) {
      matches.push({ type: "single", value: match[2] });
    } else if (match[1]) {
      matches.push({ type: "double", value: match[1] });
    } else {
      matches.push({ type: "plain", value: match[0] });
    }
  }
  return matches;
}
function splitSpacesExcludeQuotes(string) {
  return splitSpacesExcludeQuotesDetailed(string).map((details) => details.value);
}
var quoted_string_space_split_default = splitSpacesExcludeQuotes;

// src/index.ts
var src_default = quoted_string_space_split_default;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  splitSpacesExcludeQuotes,
  splitSpacesExcludeQuotesDetailed
});
//# sourceMappingURL=index.js.map
